"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def extraction(number, sum_uneven = 0, sum_even=0):
    count = len(str(number))

    if count > 1:
        el = number % 10
        if el % 2:
            extraction(number // 10, sum_uneven + 1, sum_even)
        else:
            extraction(number//10, sum_uneven, sum_even + 1)
    else:
        el = number % 10
        if el % 2:
            return print(sum_uneven + 1, sum_even)
        else:
            sum_even =+ 1
        return print(sum_uneven, sum_even+1)


extraction(1333331116644666)