"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

company = {'company1': 10,'company2': 20,'company3': 30,'company4': 40, 'company5':50 }

# ВАРИАНТ 1
company_sort = list(company.items())  #n
company_sort.sort(key=lambda i:[1])   #nLogN
company_max = company_sort[-1:-4:-1]  #n
print(company_max)
# Сложность = 2n + nLogN = O(nLogN)

# ВАРИАНТ 2
company2 = company.copy()                   #n
for key1, value1 in company2.items():       #^n
    for key2, value2 in company2.items():   #^n
        while len(company2) > 3:             #1
            if key1 < key2:                  #1
                company2.pop(key1)           #1
print(company2)

# Сложность = 1+1+1+3n2+n = 3+n+3n2 = O(n2)

""""
Вывод: несмотря на наличие большего количества строк кода во втором варианте,
он оказался более быстрым, так как в нем не ипользую метод sort.
"""""


